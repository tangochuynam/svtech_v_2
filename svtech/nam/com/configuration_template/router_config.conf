groups {
    re0 {
        system {
            host-name {{cfg_router.hostname}}_RE0;
        }
        interfaces {
            fxp0 {
				description "Connect to MGT HW - OLD";					
                unit 0 {		
                    family inet {
                        address 10.123.0.2/29 {
                            master-only;
                        }
						address 10.123.0.3/29;
                    }
                }
            }
        }
    }
    re1 {
        system {
            host-name {{cfg_router.hostname}}_RE1;
        }
        interfaces {
            fxp0 {
				description "Connect to MGT HW - OLD";					
                unit 0 {
                    family inet {
                        address 10.123.0.2/29 {
                            master-only;
                        }
						address 10.123.0.4/29;
                    }
                }
            }
        }
    }
    PROTECT-RE-GROUP {
        interfaces {
            lo0 {
                unit <*> {
                    family inet {
                        filter {
                            input PROTECT-RE-FILTER;
                        }
                    }
                    inactive: family inet6 {
                        filter {
                            input v6-PROTECT-RE-FILTER;
                        }
                    }
                }
            }
        }
    }
    PING-VPLS {
        interfaces {
            lt-0/0/10 {
                unit 1 {
                    encapsulation ethernet;
                    peer-unit 2;
                    family inet {
                        /* Change IP according to Customer IP range */
                        address 192.168.254.100/24;
                    }
                }
                /* Put this IFL in VPLS instance that need to ping check in case without VLAN-ID in pseudowire */
                unit 2 {
                    encapsulation ethernet-vpls;
                    peer-unit 1;
                }
                unit 3 {
                    encapsulation vlan;
                    /* Change VLAN-ID according to Customer VLAN-ID */
                    vlan-id 100;
                    peer-unit 4;
                    family inet {
                        /* Change IP according to Customer IP range */
                        address 192.168.255.100/24;
                    }
                }
                /* Put this IFL in VPLS instance that need to ping check in case with VLAN-ID in pseudowire */
                unit 4 {
                    encapsulation vlan-vpls;
                    /* Change VLAN-ID according to Customer VLAN-ID */
                    vlan-id 100;
                    peer-unit 3;
                }
            }
        }
        routing-instances {
            VPLS-PING-NOVLAN {
                instance-type virtual-router;
                interface lt-0/0/10.1;
            }
            VPLS-PING-VLAN {
                instance-type virtual-router;
                interface lt-0/0/10.3;
            }
        }
    }
	BLOCK-BPDU-VPLS {
		firewall {
			family vpls {
				filter BLOCK-BPDU {
					term BLOCK-INVALID-BPDU {
						from {
							destination-mac-address {
								/* Bridging not allowed by 802.1D */
								01:80:c2:00:00:00/44;
								/* Bridge mgmt group address - Deprecated */
								01:80:c2:00:00:10/48;
								/* Cisco ISL */
								01:00:0c:00:00:00/48;
								/* Cisco CDP,VTP,PVST ... */
								01:00:0c:cc:cc:cc/47;
								/* Cisco inter-vlan bridging */
								01:00:0c:cc:cc:ce/48;
							}
						}
						then {
							count INVALID-BPDU;
							discard;
						}
					}
					term ACCEPT-REST {
						then accept;
					}
				}
			}
		}
		routing-instances {
			<L2-*> {
				forwarding-options {
					family vpls {
						filter {
							input BLOCK-BPDU;
						}
					}
				}
			}
		}
	}	
}
apply-groups [ re0 re1 BLOCK-BPDU-VPLS];
system {
    time-zone Asia/Saigon;
    switchover-on-routing-crash;
    no-multicast-echo;
    no-redirects;
    no-redirects-ipv6;
	arp {
		interfaces {
			{%- for ifd_arp in list_ifd %}
				{%- for unit_arp in ifd_arp.list_unit %}
				{%- if unit_arp.arp_exp > 0 %}
					{{ifd_arp.mx_ifd}}.{{unit_arp.unit1}} {
						aging-timer {{unit_arp.arp_exp}};
					}
				{%- endif%}
				{%- endfor%}
			{%- endfor %}
		}
	}
    internet-options {
        no-source-quench;
        tcp-drop-synfin-set;
    }
    /* Will remove knob "password" in production network */
    authentication-order password;
    ports {
        console {
		    /* PR1253544 already fixed since 17.3R1 */
			log-out-on-disconnect;
            type vt100;
        }
        auxiliary disable;
    }
    root-authentication {
        encrypted-password "$1$CpR/YIUJ$rhJ6IsID4wxDMvzjH01lK."; ## SECRET-DATA
    }
    inactive: tacplus-server {
        172.16.252.250 {
            port 49;
            secret "$9$F71YnCuREyWLN-V5Fn/0OylKvxdsYo"; ## SECRET-DATA
            timeout 5;
            source-address {{cfg_router.source_ip}};
        }
    }
    /* Will be active in production network */
    inactive: accounting {
        events [ login change-log interactive-commands ];
        destination {
            tacplus {
                server {
                    172.16.252.250 {
                        port 49;
                        secret "$9$F71YnCuREyWLN-V5Fn/0OylKvxdsYo"; ## SECRET-DATA
                        timeout 5;
                        single-connection;
                        source-address {{cfg_router.source_ip}};
                    }
                }
            }
        }
    }
    login {
        message "--------------------------------------------------------------------------------\n                   MANE - {{cfg_router.hostname.split('-')[1][0:3]}}\n\n                   BAN DANG LOGIN VAO THIET BI {{cfg_router.hostname}}\n--------------------------------------------------------------------------------\n\n";
        class TTVT-VIEW {
			idle-timeout 10;
			permissions [ network view view-configuration ];
		}
        /* Thong tin User se duoc lay truc tiep tai moi tinh */
        class admin {
            idle-timeout 5;
            permissions all;
        }
        class khaithac {
            idle-timeout 5;
            permissions [ network trace view ];
        }
        class noc {
            idle-timeout 15;
            permissions view;
        }
		class monitor {
			idle-timeout 15;
			permissions [ view view-configuration ];
			allow-commands "(show.*)";
		}
        user admin {
            class admin;
            authentication {
                encrypted-password "$1$WTKwNPK4$X363sk/YjRmN5/gFi4b931"; ## SECRET-DATA
            }
        }
        user juniper {
            class admin;
            authentication {
                encrypted-password "$6$Lbj.WFXD$y47/0gY8D/3fQ3MrFe4laRn/1/0epY1KcTFQ3i30hjZX7xtqJaLnl8ZyPlqHcWcTNUGPMwG//6er4qshatqZj1"; ## SECRET-DATA
            }
        }
		user svtech-tool {
			class monitor;
			authentication {
				encrypted-password "$5$sy1R7ebh$PSF7uLgnHGc3swe9cGVTHtx9nsWiSsxZ9zqUQ51R868"; ## SECRET-DATA
			}
		}
        user ttvt {
			class TTVT-VIEW;
			authentication {
				encrypted-password "$5$GzonNPjB$AOT6Ff0J0XdIDlekOLeWCYX3OqyhcPMhb1yueBIiwO1"; ## SECRET-DATA
			}
		}
		user vtn2 {
        	class admin;
        	authentication {
        	    encrypted-password "$5$TudZyN9D$Bs75l8CFKo98NLUIAyns3jOdD1kz.reW33G.apmj1d5"; ## SECRET-DATA
        	}
    	}
        user remote {
            class khaithac;
        }
        user remote-su {
            class admin;
        }
    }
    services {
        ftp;
        ssh {
            root-login deny;
            protocol-version v2;
            connection-limit 15;
        }
        telnet {
            connection-limit 30;
            rate-limit 45;
        }
        netconf {
            ssh {
                connection-limit 10;
                rate-limit 4;
            }
        }
    }
    syslog {
        archive size 10m files 10;
        user * {
            any emergency;
        }
        {%- for log_server in lst_log_server %}
        	{%- if log_server.purpose == 'Logging'%}
	        host {{log_server.ip}} {
	        	any notice;
	            daemon any;
	            kernel info;
	            interactive-commands any;
	            facility-override local7;
	            log-prefix {{cfg_router.hostname}};
	        }
        	{%- endif %}
        {%- endfor %}
        host other-routing-engine {
            any error;
            log-prefix other-RE;
        }
        file messages {
            any info;
            authorization none;
            firewall none;
            interactive-commands none;
            archive world-readable;
            explicit-priority;
        }
        file interactive-commands {
            interactive-commands any;
        }
        file security {
            authorization info;
        }
        file firewall-filter-log {
            firewall any;
        }
        file config-changes {
            change-log info;
        }
		file link.up.down {
			daemon info;
			match "ifName xe-|ifName ge-";
			archive size 1m files 10;
		}
        time-format year millisecond;
        source-address {{cfg_router.source_ip}};
    }
    commit {
        synchronize;
        no-delta-synchronize;
        private {
            no-fast-diff;
        }
    }
    ddos-protection {
        protocols {
            arp {
                aggregate {
                    bandwidth 5000;
                    burst 5000;
                }
            }
        }
    }
    ntp {
        {%- for ntp_server in lst_log_server %}
        	{%- if ntp_server.purpose == 'NTP'%}
	        server {{ntp_server.ip}} {%- if ntp_server.pref == true %} prefer{%- endif %};
        	{%- endif %}
        {%- endfor %}
        source-address {{cfg_router.source_ip}};
    }
}
chassis {
    craft-lockout;
    dump-on-panic;
    redundancy {
        routing-engine 0 master;
        routing-engine 1 backup;
        failover {
            on-loss-of-keepalives;
            on-disk-failure;
        }
        graceful-switchover;
    }
    aggregated-devices {
        ethernet {
            device-count 50;
        }
    }
    fpc 1 {
        pic 0 {
            tunnel-services {
                bandwidth 1g;
            }
        }
    }
    fpc 7 {
        pic 0 {
            tunnel-services {
                bandwidth 1g;
            }
        }
    }
    alarm {
        management-ethernet {
            link-down ignore;
        }
    }
    network-services enhanced-ip;
}
interfaces {
    {%- for ifd in list_ifd %}
    {%- if ifd.mx_ifd != '' %}
    {{ifd.mx_ifd}} {
		{%- if ifd.admin_status == false %}
		disable;
		{%- endif %}
        {%- if ifd.mx_ifd == 'lo0'%}
        apply-groups PROTECT-RE-GROUP;
        {%- endif %}
		{%- if ifd.description!='' %}
        description "{{ifd.description}}";
		{%- endif%}
		{%- if (ifd.mx_ifd == 'ae99') %}
                    aggregated-ether-options {
                        lacp {
                            active;
                        }
                    }
        {%- endif %}
        {%- if (ifd.name != 'Vlanif') and (ifd.name != 'LoopBack') %}
            {%- if ifd.parent_link == '' %}
                {%- if(ifd.flex_service == false) %}
                    {%- if ('ae' not in ifd.mx_ifd) %}
                    hold-time up 5000 down 0;
                    {%- endif %}
                    mtu 9192;
                {%- else %}
                	flexible-vlan-tagging; 
                    encapsulation flexible-ethernet-services;
                    {%- if ('ae' not in ifd.mx_ifd) %}
                    hold-time up 5000 down 0;
                    {%- endif %}
                    mtu 9022;
                    {%- if ifd.native_vlan != '' %}
                    native-vlan-id {{ifd.native_vlan}};
                    {%- endif %}
                {%- endif %}
                {%- if (ifd.ae_mode == 'active') and ifd.type == 'ae'  %}
                    aggregated-ether-options {
                        lacp {
                            active;
                        }
                    }
                {%- endif %}
            {%- else %}
                {%- if (ifd.flex_service == false) %}
                /* check gia tri flex_serice 1 */
                    hold-time up 5000 down 0; 
                {%- else %} 
                /* check gia tri flex_serice 2 */
                    hold-time up 5000 down 0;
                {%- endif %}
            {%- endif %}
            {%- if (ifd.type != 'ae') and (ifd.mx_ifd!='irb') %}
                {%- if ifd.wanphy == true %}
            framing {
					wan-phy;
				}
                {%- endif %}
            gigether-options {
                {%- if (ifd.speed == 'auto') %}
                    auto-negotiation; 
                {%- else %}
                    no-auto-negotiation;
                {%- endif %}
                {%- if (ifd.parent_link != '') %}
                    802.3ad ae{{ifd.parent_link}};
                {%- endif %}
            }
                {%- if 'xe' in ifd.mx_ifd %}
                optics-options {
                    alarm low-light-alarm {
                        syslog;
                    }
                    warning low-light-warning {
                        syslog;
                    }
                }
                {%- endif %}
            {%- endif %}
        {%- endif %}
		{%- if ifd.flag_ccc == true %}
		encapsulation ethernet-ccc;
        unit 0;
		{%- else %}
        {%- for unit_temp in ifd.list_unit %}
		{%- if (unit_temp.ip|length > 0) or (unit_temp.svlan!='') %}
			/* List of ifls are pushed into interface {{ifd.mx_ifd}}.{{unit_temp.unit1}}:{{unit_temp.old_ifl}} */ 
        {%- if (unit_temp.igmp == true) and (ifd.parent_link == '') and (ifd.mx_ifd != 'irb') %}
        unit {{unit_temp.unit1}} {
			{%- if unit_temp.admin_status == false %}
			disable;
			{%- endif %}
            {%- if unit_temp.cvlan == '' %}
                {%- if unit_temp.description != '' %}
            description "{{unit_temp.description}} - SVLAN:{{unit_temp.svlan}}";
                {%- else %}
            description "SVLAN:{{unit_temp.svlan}}";
                {%- endif %}
            vlan-id {{unit_temp.svlan}};
            {%- else %}
                {%- if unit_temp.description != '' %}
            description "{{unit_temp.description}} - SVLAN:{{unit_temp.svlan}} - CVLAN:{{unit_temp.cvlan}}";
                {%- else %}
            description "SVLAN:{{unit_temp.svlan}} - CVLAN:{{unit_temp.cvlan}}";
                {%- endif %}
            vlan-tags outer {{unit_temp.svlan}} inner {{unit_temp.cvlan}}; 
            {%- endif %}
            family inet {
				{%- if unit_temp.ff_in != '' %}
                filter {
                    input {{unit_temp.ff_in}};
                }
                {%- endif %}
                unnumbered-address lo0.0;
            }
        }
        {%- elif (unit_temp.igmp == false) and (ifd.parent_link == '') %}
        {%- if unit_temp.dhcp_gw != '' %}
        unit {{unit_temp.unit1}} {
		{%- if unit_temp.admin_status == false %}
			disable;
			{%- endif %}
            {%- if unit_temp.cvlan == '' %}
            description "SVLAN:{{unit_temp.svlan}}";
            vlan-id {{unit_temp.svlan}};
            {%- else %}
            description "SVLAN:{{unit_temp.svlan}} - CVLAN:{{unit_temp.cvlan}}";
            vlan-tags outer {{unit_temp.svlan}} inner {{unit_temp.cvlan}}; 
            {%- endif %}
            family inet {
                rpf-check fail-filter RPF-ALLOW-DHCP;
				{%- if unit_temp.ff_in != '' or unit_temp.ff_out != '' %}
                filter {
                     {%- if unit_temp.ff_in != '' %}
                     input FF-INET-{{unit_temp.ff_in}}; 
                     {%- endif %}
                     {%- if unit_temp.ff_out != '' %}
                     output FF-INET-{{unit_temp.ff_out}};
                     {%- endif %}
                }
                {%- endif %}
                unnumbered-address {{unit_temp.ip[0].ip}} preferred-source-address {{unit_temp.dhcp_gw}};
            }
        }
		{%- else %}
		unit {{unit_temp.unit1}} {
			{%- if unit_temp.admin_status == false %}
			disable;
			{%- endif %}
            {%- if (unit_temp.unit1 == 0) and (ifd.mx_ifd == 'lo0') %}
            family iso {
                address {{ifd.iso_address}};
            }
            {%- endif %}
            {%- if unit_temp.svlan != '' %}
                {%- if unit_temp.description != '' %}
                    {%- if unit_temp.cvlan != '' %}
            description "{{unit_temp.description}} - SVLAN:{{unit_temp.svlan}} - CVLAN:{{unit_temp.cvlan}}";
                    {%- else %}
            description "{{unit_temp.description}} - SVLAN:{{unit_temp.svlan}}";
                    {%- endif %}
                {%- else %}
                    {%- if unit_temp.cvlan != '' %}
            description "SVLAN:{{unit_temp.svlan}} - CVLAN:{{unit_temp.cvlan}}";
                    {%- else %}
            description "SVLAN:{{unit_temp.svlan}}";
                    {%- endif %}
                {%- endif %}
            {%- else %}
				{%- if unit_temp.description != '' %}
            description "{{unit_temp.description}}";
				{%- endif %}
            {%- endif %}
            {%- if (unit_temp.svlan != '') %}
                {%- if (unit_temp.cvlan == '') %}
                    {%- if unit_temp.svlan_list != '' %}
                    vlan-id-list [ {{unit_temp.svlan_list}} ];
                    {%- else %}
                    vlan-id {{unit_temp.svlan}}; 
                    {%- endif%}
                {%- else %}
                    {%- if (unit_temp.cvlan_list != "") %}
                    vlan-tags outer {{unit_temp.svlan}} inner-list [ {{unit_temp.cvlan_list}} ]; 
                    {%- else %}
                    vlan-tags outer {{unit_temp.svlan}} inner {{unit_temp.cvlan}}; 
                    {%- endif%}
                {%- endif %}    
            {%- endif %}
            {%- if unit_temp.flag_bdid == true %}
                {%- if (unit_temp.vlan_mapping != '') and (unit_temp.ip|length == 0) %}
					{%- if unit_temp.vsi_encap=='ethernet'%}
						{%- if unit_temp.vlan_mapping == 'pop' %}
							{%- if unit_temp.vlan_translate == '1' %}
							input-vlan-map pop;
							output-vlan-map push;
							{%- elif unit_temp.vlan_translate == '2' %}
							input-vlan-map pop-pop;
							output-vlan-map push-push;
							{%- endif %}
						{%- endif %}
					{%- elif unit_temp.vsi_encap=='tagged' %}
						{%- if unit_temp.vlan_mapping == 'pop' %}
							{%- if unit_temp.vlan_translate == '1' %}
							input-vlan-map {
								swap;
								vlan-id 4094;
							}
							output-vlan-map swap;
							{%- elif unit_temp.vlan_translate == '2' %}
							input-vlan-map {
								pop-swap;
								inner-vlan-id 4094;
							}
							output-vlan-map swap-push;
							{%- endif %}
						{%- elif unit_temp.vlan_mapping == 'push' %}
							input-vlan-map {
								push;
								vlan-id 4094;
							}
							output-vlan-map pop;
						{%- endif %}
					{%- endif %}			
                {%- endif %}
            {%- endif %}
            {%- if (unit_temp.ip|length>0) %}
                family inet {
                    {%- if (unit_temp.service != 'CORE') and (ifd.mx_ifd != 'irb') and (ifd.mx_ifd != 'lo0') %}
                        {%- if unit_temp.service_pol_in != ''  or  unit_temp.service_pol_out != '' %}
                         policer {
                             {%- if unit_temp.service_pol_in != '' %}
                             input POLICER-{{unit_temp.service_pol_in}}; 
                             {%- endif %}
                             {%- if unit_temp.service_pol_out != '' %}
                             output POLICER-{{unit_temp.service_pol_out}};
                             {%- endif %}
                        }
                        {%- endif %}
                        {%- if unit_temp.ff_in != '' or unit_temp.ff_out != '' %}
                        filter {
                             {%- if unit_temp.ff_in != '' %}
                             input FF-INET-{{unit_temp.ff_in}}; 
                             {%- endif %}
                             {%- if unit_temp.ff_out != '' %}
                             output FF-INET-{{unit_temp.ff_out}};
                             {%- endif %}
                        }
                        {%- endif %}
                    {%- endif %}
                    {%- for ip_temp in unit_temp.ip %}
						{%-if ip_temp.vrrp_group|length == 0 %}
					address {{ip_temp.ip}};
						{%- else %}
					address {{ip_temp.ip}} {
						{%- for tmp_group in ip_temp.vrrp_group%}
						vrrp-group {{tmp_group.group_id}} {
							{%- for tmp_vip in tmp_group.vip %}
							virtual-address {{tmp_vip}};
							{%- endfor %}
							{%- if tmp_group.vrrp_pri!='100'%}
							priority {{tmp_group.vrrp_pri}};
							{%- endif %}
							{%- if tmp_group.vrrp_holdtime!='0'%}
							preempt {
								hold-time {{tmp_group.vrrp_holdtime}};
							}
							{%- endif %}
						}
						{%- endfor %}
					}
					{%- endif %}
					{%- endfor %}
                }
            {%- endif %}
            {%- if (unit_temp.service == 'CORE') and (ifd.name != 'Vlan') and (ifd.name != 'LoopBack') %}
                family iso;
                family mpls {
                    maximum-labels 5;
                }
			{%- elif (unit_temp.routing_type == 'isis') and (ifd.name != 'LoopBack') %}
				family iso;
            {%- elif (unit_temp.service == 'vpls') and (ifd.name != 'Vlan') %}
            {%- for unit_remote in unit_temp.list_unit_remote %}
            /* \n
            {{unit_remote.hostname_remote}}-{{unit_remote.ifd}}.{{unit_remote.unit}}-{{unit_remote.service}}  \n
            svlan: {{unit_remote.svlan}}  \n
            cvlan: {{unit_remote.cvlan}}  \n
            action: {{unit_remote.vlan_mapping}}/{{unit_remote.vlan_translate}}  \n
            ip: {{unit_remote.ip}}  \n
            */
            {%- endfor %}
            encapsulation vlan-vpls;
                {%- if unit_temp.service_pol_in != ''  or  unit_temp.service_pol_out!= '' 
                or unit_temp.split_horizon == true or unit_temp.ff_in != '' or unit_temp.ff_out != '' or unit_temp.bd_dup_notation == true %}
                family vpls {
                        {%- if unit_temp.split_horizon == true %}
                            core-facing;
						{%- else %}
						{%- if unit_temp.bd_dup_notation %}
						/*Co 2 unit cung BD_ID {{unit_temp.bd_id}} trong {{ifd.mx_ifd}}*/
						core-facing;
						{%- endif %}
                        {%- endif %}
                         {%- if unit_temp.service_pol_in != ''  or  unit_temp.service_pol_out != '' %}
                         policer {
                             {%- if unit_temp.service_pol_in != '' %}
                             input POLICER-{{unit_temp.service_pol_in}}; 
                             {%- endif %}
                             {%- if unit_temp.service_pol_out != '' %}
                             output POLICER-{{unit_temp.service_pol_out}};
                             {%- endif %}
                        }
                        {%- endif %}
                        {%- if unit_temp.ff_in != '' or unit_temp.ff_out != '' %}
                        filter {
                             {%- if unit_temp.ff_in != '' %}
                             input FF-VPLS-{{unit_temp.ff_in}}; 
                             {%- endif %}
                             {%- if unit_temp.ff_out != '' %}
                             output FF-VPLS-{{unit_temp.ff_out}};
                             {%- endif %}
                        }
                        {%- endif %}
                }    
                {%- endif %}
            {%- elif (unit_temp.service == 'l2circuit') and (ifd.name != 'Vlan') %}
            {%- for unit_remote in unit_temp.list_unit_remote %}
            /* \n
            {{unit_remote.hostname_remote}}-{{unit_remote.ifd}}.{{unit_remote.unit}}-{{unit_remote.service}}  \n
            svlan: {{unit_remote.svlan}}  \n
            cvlan: {{unit_remote.cvlan}}  \n
            action: {{unit_remote.vlan_mapping}}/{{unit_remote.vlan_translate}}  \n
            ip: {{unit_remote.ip}}  \n
            */
            {%- endfor %}
            encapsulation vlan-ccc;
                {%- if unit_temp.service_pol_in != ''  or  unit_temp.service_pol_out!= '' or unit_temp.ff_in != '' or unit_temp.ff_out != ''  %}
                family ccc {
                         {%- if unit_temp.service_pol_in != ''  or  unit_temp.service_pol_out != '' %}
                         policer {
                             {%- if unit_temp.service_pol_in != '' %}
                             input POLICER-{{unit_temp.service_pol_in}}; 
                             {%- endif %}
                             {%- if unit_temp.service_pol_out != '' %}
                             output POLICER-{{unit_temp.service_pol_out}};
                             {%- endif %}
                        }
                        {%- endif %}
                        {%- if unit_temp.ff_in != '' or unit_temp.ff_out != '' %}
                        filter {
                            {%- if unit_temp.ff_in != '' %}
                             input FF-CCC-{{unit_temp.ff_in}}; 
                             {%- endif %}
                             {%- if unit_temp.ff_out != '' %}
                             output FF-CCC-{{unit_temp.ff_out}};
                             {%- endif %}
                        }
                        {%- endif %}
                }    
                {%- endif %}  
            {%- elif (unit_temp.service == 'ccc-tag') and (ifd.name != 'Vlan') %}
			encapsulation vlan-ccc;
			{%- endif %}
        }
        {%- endif %}
        {%- endif %}
		{%- endif %}
        {%- endfor %}
		{%- endif %}
    }
    {%- endif %}
    {%- endfor %}
}
snmp {
    community dmsmaneread {
        authorization read-only;
        client-list-name SNMP-CLIENT-PREFIXES;
    }
    /* Consider */
    trap-options {
        source-address {{cfg_router.source_ip}};
    }
    trap-group MANE-TRAP-GROUP {
        version v2;
        categories {
            authentication;
            chassis;
            link;
            routing;
            startup;
            vrrp-events;
            configuration;
        }
        /* Change in production network */
        targets {
        {%- for snmp_trap_server in lst_log_server %}
        	{%- if snmp_trap_server.purpose == 'SNMP_Trap'%}
	        {{snmp_trap_server.ip}};
        	{%- endif %}
        {%- endfor %}
        }
    }
    filter-interfaces {
        interfaces {
			"!^[gxae][et].*";
			"(ge|xe|ae|et).*\..*";
        }
        all-internal-interfaces;
    }	
}
{%- for ftp_server in lst_log_server %}
    {%- if ftp_server.purpose == 'FTP'%}
event-options {
    generate-event {
        EVERY-DAY time-of-day "{{event_time}}";
    }
    policy DAILY-BACKUP {
        events EVERY-DAY;
        then {
            execute-commands {
                commands {
                    "show configuration | no-more";
                }
                output-filename BACKUP-CONFIG;
                destination FTP-SERVER;
                output-format text;
            }
        }
    }
    destinations {
        FTP-SERVER {
            archive-sites {
                /* Consider - Based on HCM-BRAS configuration */
                "ftp://mx960@{{ftp_server.ip}}" password "$9$eaHvX7dbs4JGVbfTFnCA"; ## SECRET-DATA
            }
        }
    }
}
	{%- endif %}
{%- endfor %}
routing-options {
    ppm {
        redistribution-timer 120;
    }
    nonstop-routing;
	{%- if list_static_global|length > 0 %}
    static {
        {%- for static_global in list_static_global %}
        route {{static_global.net}} {
            {%- for nh_ad_global in static_global.list_nh_ad %}
                {%- if nh_ad_global.nh==''%}
				discard;
				{%- else %}
					{%- if(nh_ad_global.ad != 0) %}
					qualified-next-hop {{nh_ad_global.nh}} {
						preference {{nh_ad_global.ad}};
						{%- if nh_ad_global.multiplier > 0%}
						bfd-liveness-detection {
							minimum-interval {{nh_ad_global.min_tx}};
							multiplier {{nh_ad_global.multiplier}};
						}
						{%- endif%}
					}
					{%- else %}
						{%- if nh_ad_global.multiplier > 0%}
						qualified-next-hop {{nh_ad_global.nh}} {
							bfd-liveness-detection {
								minimum-interval {{nh_ad_global.min_tx}};
								multiplier {{nh_ad_global.multiplier}};
							}
						}
						{%- else %}
						qualified-next-hop {{nh_ad_global.nh}};
						{%- endif %}
					{%- endif %}
                {%- endif %}
			{%- endfor %}
        }
        {%- endfor %}
    }
    {%- endif %} 
    router-id {{cfg_router.source_ip}};
    autonomous-system {{cfg_router.as_number}};
    forwarding-table {
        export LOAD-BALANCE;
    }
}
protocols {
	{%- if list_ccc|length >0 %}
	connections {
	{%- for item_ccc in list_ccc %}
        interface-switch {{item_ccc.name}} {
		{%- for item_intf in item_ccc.list_intf_ccc %}
            interface {{item_intf}};
		{%- endfor %}
        }
	{%- endfor %}
    }
	{%- endif %}
    {%- if cfg_router.list_igmp_ifl|length > 0 %}
    igmp {
        {%- for igmp_ifl in cfg_router.list_igmp_ifl %}
        {%- if igmp_ifl.mx_ifd != '' %}
        interface {{igmp_ifl.mx_ifd}}.{{igmp_ifl.unit1}} {
            ssm-map-policy SSM-POLICY;
            promiscuous-mode;
        }
        {%- endif %}
        {%- endfor %}
    }
    {%- endif %}
    rsvp {
        {%- for rsvp_temp in cfg_router.list_core_rsvp %}
		{%- if rsvp_temp.mx_ifd !='' %}		
        interface {{rsvp_temp.mx_ifd}}.{{rsvp_temp.unit1}};
        {%- endif %}		
        {%- endfor %}
    }
    mpls {
        statistics {
            file MPLS-LSP-STATS size 10m files 10;
            interval 300;
        }
        log-updown {
            syslog;
            trap;
            trap-path-down;
            trap-path-up;
        }
        smart-optimize-timer 60;
        no-propagate-ttl;
        ipv6-tunneling;
        optimize-timer 300;
        {%- for lsp_temp in list_lsp %}
        label-switched-path lsp-{{lsp_temp.hostname}}-to-{{lsp_temp.dest_name}}-{{lsp_temp.number}} {
   			to {{lsp_temp.dest}} ;
   			description {{lsp_temp.name}};
   			{%- if lsp_temp.admin_status == false %}
   			disable;
   			{%- endif %}
    		adaptive;
    		primary p-{{lsp_temp.hostname}}-to-{{lsp_temp.dest_name}}-{{lsp_temp.number}};
    		{%- if (lsp_temp.bk_path != '') or (lsp_temp.bk_path_org == true) %}
    			{%- if lsp_temp.bk_host_stb %}
    		secondary s-{{lsp_temp.hostname}}-to-{{lsp_temp.dest_name}}-{{lsp_temp.number}} {
        		standby;
   			}
   				{%- else %}
   			secondary s-{{lsp_temp.hostname}}-to-{{lsp_temp.dest_name}}-{{lsp_temp.number}};
   				{%- endif %}
   			{%- endif %}
		}
		{%- if (lsp_temp.bk_path == '') and (lsp_temp.bk_path_org == true) %}
		path s-{{lsp_temp.hostname}}-to-{{lsp_temp.dest_name}}-{{lsp_temp.number}};
		{%- endif %}
		path p-{{lsp_temp.hostname}}-to-{{lsp_temp.dest_name}}-{{lsp_temp.number}} {
			{%- for path_nh in lsp_temp.lst_path_pri %}
			{%- if path_nh.nh.startswith('123.') %}
			{{path_nh.nh}} loose;
			{%- else %}
			{{path_nh.nh}} strict;
			{%- endif %}
			{%- endfor %}
		}
		{%- if lsp_temp.lst_path_second|length > 0 %}
		path s-{{lsp_temp.hostname}}-to-{{lsp_temp.dest_name}}-{{lsp_temp.number}} {
			{%- for path_nh_1 in lsp_temp.lst_path_second %}
			{%- if path_nh_1.nh.startswith('123.') %}
			{{path_nh_1.nh}} loose;
			{%- else %}
			{{path_nh_1.nh}} strict;
			{%- endif %}
			{%- endfor %}
		}
		{%- else %}
		path s-{{lsp_temp.hostname}}-to-{{lsp_temp.dest_name}}-{{lsp_temp.number}};
		{%- endif %}
		{%- endfor %}

        {%- for mpls_temp in cfg_router.list_core_mpls %}
		{%- if (mpls_temp.mx_ifd != 'lo0') and (mpls_temp.mx_ifd != '') %}
        interface {{mpls_temp.mx_ifd}}.{{mpls_temp.unit1}};
		{%- endif%}		
        {%- endfor %}
		{%- if list_ccc|length >0 %}
		{%- for item_ccc_mpls in list_ccc %}
        {%- for item_intf_mpls in item_ccc_mpls.list_intf_ccc %}
		interface {{item_intf_mpls}};
		{%- endfor %}
		{%- endfor %}
		{%- endif %}
    }
    bgp {
        precision-timers;
        path-selection external-router-id;
        advertise-from-main-vpn-tables;
        mtu-discovery;
        log-updown;
        {%- for tmp_bgp in lst_bgp_huawei%}
        group {{tmp_bgp.name_group}}{
            type internal;
            {%- if tmp_bgp.cluster_id != '' %}
            cluster {{tmp_bgp.cluster_id}};
            {%- endif %}
            local-address {{cfg_router.source_ip}};
            family inet-vpn {
                unicast;
            }
            family inet6-vpn {
                unicast;
            }
            {%- for tmp_neighbor in tmp_bgp.list_neighbor_peer_as %}
            neighbor {{tmp_neighbor}};
            {%- endfor %}
        }
        {%- endfor %}
    }
    isis {
		{%- if (dict_exp_isis['level-1']!='') or (dict_exp_isis['level-2']!='') %}
		export ps-exp-isis;
		{%- endif %}
        reference-bandwidth 100g;
        lsp-lifetime 65535;
        overload timeout 480;
        level 2 disable;
        level 1 {
            wide-metrics-only;
            prefix-export-limit 100;
        }
        {%- for isis_temp in cfg_router.list_core_igp %}
		{%- if (isis_temp.mx_ifd !='') and (isis_temp.mx_ifd !='lo0') %}		
        interface {{isis_temp.mx_ifd}}.{{isis_temp.unit1}} {
			{%- if isis_temp.ldp_sync == true %}
            ldp-synchronization;
			{%- endif %}
            point-to-point;
            level 1 {
            {%- if isis_temp.metric > 0 %}
    			metric {{isis_temp.metric}};
            {%- endif%}
			{%- if isis_temp.isis_authen == true %}
    			hello-authentication-key "$9$j1k5F69A1RS/9rvMWx7Hqmfn/"; ## SECRET-DATA
    			hello-authentication-type md5;
   			{%- endif %}
			}
        }
		{%- endif%}		
        {%- endfor %}
        interface lo0.0;
    }
    ldp {
        track-igp-metric;
        deaggregate;
        {%- for ldp_temp in cfg_router.list_core_mpls %}
        {%- if ldp_temp.mx_ifd !='' %}		
        interface {{ldp_temp.mx_ifd}}.{{ldp_temp.unit1}};
		{%- endif %}		
        {%- endfor %}
        interface lo0.0;
        {%- for tldp_temp in cfg_router.list_tldp %}
        session {{tldp_temp}} {
            authentication-key "$9$6QwyCOILX-dwgX7JGUimPRhSyrK7-woaUcS8x7-sYGUj"; ## SECRET-DATA
        }
        {%- endfor %}
        session-protection;
    }
    pim {
        {%- for pim_temp in cfg_router.list_core_pim %}
		{%- if pim_temp.mx_ifd !='' %}		
        interface {{pim_temp.mx_ifd}}.{{pim_temp.unit1}} {
            mode sparse;
        }
		{%- endif %}		
        {%- endfor %}
        join-load-balance {
            automatic;
        }
        standby-path-creation-delay 5;
        idle-standby-path-switchover-delay 10;
    }
    lldp {
        management-address {{cfg_router.source_ip}};
        port-id-subtype interface-name;
        {%- for ldp_temp in cfg_router.list_core_mpls %}
        {%- if ldp_temp.mx_ifd !='' %}		
        interface {{ldp_temp.mx_ifd}};
		{%- endif %}		
        {%- endfor %}
        interface all {
            disable;
        }
    }
	l2circuit {
        {%- for neighbor in neighbor_list %}
        neighbor {{neighbor.name}} {
            {%- if neighbor.interface_name != '' %}		
            interface {{neighbor.interface_name}} {
                {%- if neighbor.description != '' %}
                description "{{neighbor.description}}";
                {%- endif %}
                virtual-circuit-id {{neighbor.vc_id}};
                {%- if neighbor.mtu != 0 %}
                mtu {{neighbor.mtu}};
                {% else %}
				mtu 1500;
				{%- endif %}
                {%- if neighbor.encap == '' %}
                encapsulation-type ethernet-vlan;
                {%- else %}
                encapsulation-type ethernet;
                {%- endif %}
                no-control-word;
				pseudowire-status-tlv;
                {%- if neighbor.bk_peer != '' %}   
                    switchover-delay 0;
                    revert-time 10;  
                    backup-neighbor {{neighbor.bk_peer}} {
                    	virtual-circuit-id {{neighbor.bk_vc_id}};
                        standby;
                    }
                {%- endif %}
            }
			{%- endif %}			
        }
        {%- endfor %}
    }
    l2-learning {
        global-mac-move {
            threshold-time 1;
            threshold-count 50;
        }
        vpls-mac-move {
            cooloff-time 30;
            statistical-approach-wait-time 30;
            interface-recovery-time 3600;
            /* Virtual MAC for VRRP */
            virtual-mac 00:00:5e:00:01:00/40;
            /* Virtual MAC for HSRP */
            virtual-mac 00:00:0c:07:ac:00/40;
            /* Virtual MAC for GSLB */
            virtual-mac 00:07:b4:00:01:00/40;
            /* Virtual MAC for vMotion */
            virtual-mac 02:bf:00:00:00:00/16;
        }
    }
}
forwarding-options {
    no-hyper-mode;
}
policy-options {
    prefix-list SNMP-CLIENT-PREFIXES {
    	/* Ung voi moi tinh, request thong tin nay */
    }
    prefix-list INTERFACE-PREFIXES {
        apply-path "interfaces <*> unit <*> family inet address <*>";
    }
    prefix-list BGP-NEIGHBORS {
        apply-path "protocols bgp group <*> neighbor <*>";
    }
    prefix-list BGP-NEIGHBORS-RI {
        apply-path "routing-instances <*> protocols bgp group <*> neighbor <*>";
    }
    /* Consider - Based on HCM-BRAS configuration */
    prefix-list MGMT-PREFIXES {
        {%- for ip_mgmt in list_mgmt_acl %}
        {{ip_mgmt}};
        {%- endfor %}
		10.123.0.0/29;
    }
	prefix-list L2ACCESS-PREFIXES {
		/* Ung voi moi tinh, request thong tin nay */
	}	
    prefix-list NTP-SERVER {
        apply-path "system ntp server <*>";
    }
    prefix-list NTP-SOURCE-ADDRESS {
        apply-path "system ntp source-address <*>";
    }
    prefix-list INTERNAL-LO0-PREFIXES {
        /* Ung voi moi tinh, request thong tin nay */
    }
    prefix-list TACACS-SERVERS {
        apply-path "system tacplus-server <*>";
    }
    prefix-list INTERNAL-NNI-PREFIXES {
        /* Ung voi moi tinh, request thong tin nay */
    }
    {%- if list_acl|length > 0%}
    {%- for acl_temp in list_acl %}
        prefix-list {{acl_temp.name}} {
            {%- for prefix_temp in acl_temp.prefix_list %}
            {%- if prefix_temp != '' %}
            {{prefix_temp}};
            {%- endif %}
            {%- endfor %}
        } 
    {%- endfor %}
    {%- endif %}
    policy-statement LOAD-BALANCE {
        then {
            load-balance per-packet;
        }
    }
    policy-statement SSM-POLICY {
        term 1 {
			from {
				route-filter 232.84.1.0/24 orlonger;
			}
			then {
				ssm-source 123.29.128.4;
				accept;
			}
		}
		term 2 {
			from {
				route-filter 232.84.2.0/24 orlonger;
			}
			then {
				ssm-source 123.29.128.122;
				accept;
			}
		}
		term discard {
			then reject;
		}
    }
	{%- if dict_exp_isis|length >0%}
	policy-statement ps-exp-isis {
	{%- if dict_exp_isis['level-1']!='' %}
		term LEVEL-1 {
			from protocol [ {{dict_exp_isis['level-1']}} ];
            to level 1;
            then accept;
		}
	{%- else %}
		term LEVEL-2 {
			from protocol [ {{dict_exp_isis['level-2']}} ];
			then accept;
		}
	{%- endif %}
	}
	{%- endif %}
{%- for vrf_ie in vrfie_list %}
    policy-statement PS-EXP-{{vrf_ie.service_name_out}} {
        {%- if (vrf_ie.list_extcomm_term_name_seq | length > 0) %}
            {%- for psterm in vrf_ie.list_extcomm_term_name_seq %}
                term {{psterm.term_name}} {
                    from {
                        {%- if psterm.acl|length >0 %}
                        {%- for item_route in psterm.acl %}
						route-filter {{item_route}};
						{%- endfor %}
                        {%- endif %}
                        {%- if psterm.protocol != '' %}
                        protocol [ {{psterm.protocol}} ];
                        {%- endif %}
                        {%- if psterm.route_filter != '' %}
                        route-filter {{psterm.route_filter}} exact;
                        {%- endif %}
                    }
                    then {
                        {%- for extcomm_exp in vrf_ie.list_extcomm_exp_default %}
                        community add RT-{{extcomm_exp}};
                        {%- endfor %}
                        accept;
                    }
                }
            {%- endfor %}
        {%- endif %}
    }
    policy-statement PS-IMP-{{vrf_ie.service_name_out}} {
        term final {
            from {
                community [ {% for extcomm_imp in vrf_ie.list_extcomm_imp_default %} RT-{{extcomm_imp}} {% endfor %} ];
            }
            then {
                accept;
            }
        }   
    }
{%- endfor %}
{%- for route_map in lst_route_map %}
    policy-statement PS-{{route_map.name}} {
        {%- for sequence in route_map.lst_seq %}
        term {{sequence.seq}} {
			{%- if (sequence.lst_extcomm|length > 0) or (sequence.lst_prefix|length >0) %}
			from {
            {%- if sequence.lst_extcomm|length > 0 %}
                community [ {% for seq_extcomm in sequence.lst_extcomm %} RT-{{seq_extcomm}} {% endfor %} ];
            {%- endif %}
			{%- if sequence.lst_prefix|length >0 %}
				{%- for each_prf in sequence.lst_prefix %}
					{%- if each_prf|length == 1%}
					route-filter {{each_prf[0]}} exact;
					{%- elif each_prf|length == 3 %}
					route-filter {{each_prf[0]}} prefix-length-range /{{each_prf[1]}}-/{{each_prf[2]}};
					{%- endif %}
				{%- endfor %}
			{%- endif %}
			}
			{%- endif %}
            then {
                {{sequence.action}};
            }
        }
        {%- endfor %}   
    }
{%- endfor %}
{%- for extcomm in list_all_extcomm %}
    community RT-{{extcomm}} members target:{{extcomm}};
{%- endfor %}
}
class-of-service {
    classifiers {
		dscp CL-DSCP {
			forwarding-class BE {
				loss-priority low code-points 000000;
			}
			forwarding-class L2 {
				loss-priority low code-points 001010;
			}
			forwarding-class AF {
				loss-priority low code-points 010010;
			}
			forwarding-class L1 {
				loss-priority low code-points 011010;
			}
			forwarding-class H2 {
				loss-priority low code-points 100010;
			}
			forwarding-class EF {
				loss-priority low code-points 101110;
			}
			forwarding-class NC {
				loss-priority low code-points 110000;
			}
		}
		dscp-ipv6 CL-DSCP {
			forwarding-class BE {
				loss-priority low code-points 000000;
			}
			forwarding-class L2 {
				loss-priority low code-points 001010;
			}
			forwarding-class AF {
				loss-priority low code-points 010010;
			}
			forwarding-class L1 {
				loss-priority low code-points 011010;
			}
			forwarding-class H2 {
				loss-priority low code-points 100010;
			}
			forwarding-class EF {
				loss-priority low code-points 101110;
			}
			forwarding-class NC {
				loss-priority low code-points 110000;
			}
		}
		exp CL-EXP {
			forwarding-class BE {
				loss-priority low code-points 000;
			}
			forwarding-class L2 {
				loss-priority low code-points 001;
			}
			forwarding-class AF {
				loss-priority low code-points 010;
			}
			forwarding-class L1 {
				loss-priority low code-points 011;
			}
			forwarding-class H2 {
				loss-priority low code-points 100;
			}
			forwarding-class EF {
				loss-priority low code-points 101;
			}
			forwarding-class NC {
				loss-priority low code-points 110;
			}
		}
		ieee-802.1 CL-802.1p {
			forwarding-class BE {
				loss-priority low code-points 000;
			}
			forwarding-class L2 {
				loss-priority low code-points 001;
			}
			forwarding-class AF {
				loss-priority low code-points 010;
			}
			forwarding-class L1 {
				loss-priority low code-points 011;
			}
			forwarding-class H2 {
				loss-priority low code-points 100;
			}
			forwarding-class EF {
				loss-priority low code-points 101;
			}
			forwarding-class NC {
				loss-priority low code-points 110;
			}
		}
		inet-precedence CL-IPP {
			forwarding-class BE {
				loss-priority low code-points 000;
			}
			forwarding-class L2 {
				loss-priority low code-points 001;
			}
			forwarding-class AF {
				loss-priority low code-points 010;
			}
			forwarding-class L1 {
				loss-priority low code-points 011;
			}
			forwarding-class H2 {
				loss-priority low code-points 100;
			}
			forwarding-class EF {
				loss-priority low code-points 101;
			}
			forwarding-class NC {
				loss-priority low code-points 110;
			}
		}
	}
	host-outbound-traffic {
		forwarding-class NC;
		dscp-code-point 110000;
	}
	forwarding-classes {
		class BE queue-num 0;
		class L2 queue-num 1;
		class AF queue-num 2;
		class NC queue-num 3;
		class L1 queue-num 4;
		class H2 queue-num 5;
		class EF queue-num 6;
	}
    interfaces {
        {%- for int_temp in cfg_router.list_core_mpls %}
        {%- if 'lo0' not in int_temp.mx_ifd %}
		{%- if int_temp.mx_ifd != ''%} 		
        {{int_temp.mx_ifd}} {
            scheduler-map queue-table;
            unit {{int_temp.unit1}} {
                classifiers {
                    dscp CL-DSCP;
                    exp CL-EXP;
                }
                rewrite-rules {
                    exp RW-EXP protocol mpls-any;
                }
            }
        }
		{%- endif %}
		{%- endif %}		
        {%- endfor %}
        {%- for ifd_cos in list_ifd %}
			{%- if (ifd_cos.flag_core == false) and (ifd_cos.parent_link == '') and (ifd_cos.flex_service == true) 
            and (ifd_cos.mx_ifd != 'irb') and (ifd_cos.mx_ifd != 'lo0') and (ifd_cos.mx_ifd != '') %}
				{{ifd_cos.mx_ifd}} {
            scheduler-map queue-table;
            {%- for unit_cos in ifd_cos.list_unit %}
                {%- if unit_cos.ff_in != '' %}
                /* unit {{unit_cos.unit1}} {{unit_cos.ff_in}} {{unit_cos.df_classifier}} */
                {% else %}
                    {%- if unit_cos.classifier != '' %}
                    unit {{unit_cos.unit}} {
                        forwarding-class {{unit_cos.classifier}};
                    }
                    {% else %}
                        {%- if unit_cos.df_classifier != '' %}
                    unit {{unit_cos.unit}} {
                        forwarding-class {{unit_cos.df_classifier}};
                    }
                        {%- else%}
							{%- if (unit_cos.trust_1p == true) and (unit_cos.trust_upstream == true) %}
					unit {{unit_cos.unit}} {
                        classifiers {
							ieee-802.1 CL-802.1p;
						}
					}	
							{%- endif %}
						{%- endif %}
                    {%- endif %}
                {%- endif %}
            {%- endfor %}
			}
            {%- elif (ifd_cos.mx_ifd == 'irb') and (ifd_cos.list_unit | length > 0) %}
            irb {
                {%- for irb_cos in ifd_cos.list_unit %}
                unit {{irb_cos.unit1}} {
                    classifiers {
						no-default;
					}
                }
                {%- endfor %}
            }
			{%- endif%}
        {%- endfor %}
    }
    routing-instances {
        L2* {
            classifiers {
                exp CL-EXP;
            }
        }
        L3* {
            classifiers {
                exp CL-EXP;
            }
        }
    }
	rewrite-rules {
		dscp RW-DSCP {
			forwarding-class BE {
				loss-priority low code-point 000000;
			}
			forwarding-class L2 {
				loss-priority low code-point 001010;
			}
			forwarding-class AF {
				loss-priority low code-point 010010;
			}
			forwarding-class L1 {
				loss-priority low code-point 011010;
			}
			forwarding-class H2 {
				loss-priority low code-point 100010;
			}
			forwarding-class EF {
				loss-priority low code-point 101110;
			}
			forwarding-class NC {
				loss-priority low code-point 110000;
			}
		}
		dscp-ipv6 RW-DSCP {
			forwarding-class BE {
				loss-priority low code-point 000000;
			}
			forwarding-class L2 {
				loss-priority low code-point 001010;
			}
			forwarding-class AF {
				loss-priority low code-point 010010;
			}
			forwarding-class L1 {
				loss-priority low code-point 011010;
			}
			forwarding-class H2 {
				loss-priority low code-point 100010;
			}
			forwarding-class EF {
				loss-priority low code-point 101110;
			}
			forwarding-class NC {
				loss-priority low code-point 110000;
			}
		}
		exp RW-EXP {
			forwarding-class BE {
				loss-priority low code-point 000;
				loss-priority high code-point 000;
			}
			forwarding-class L2 {
				loss-priority low code-point 001;
				loss-priority high code-point 001;
			}
			forwarding-class AF {
				loss-priority low code-point 010;
				loss-priority high code-point 010;
			}
			forwarding-class L1 {
				loss-priority low code-point 011;
				loss-priority high code-point 011;
			}
			forwarding-class H2 {
				loss-priority low code-point 100;
				loss-priority high code-point 100;
			}
			forwarding-class EF {
				loss-priority low code-point 101;
				loss-priority high code-point 101;
			}
			forwarding-class NC {
				loss-priority low code-point 110;
				loss-priority high code-point 110;
			}
		}
		ieee-802.1 RW-802.1p {
			forwarding-class BE {
				loss-priority low code-point 000;
			}
			forwarding-class L2 {
				loss-priority low code-point 001;
			}
			forwarding-class AF {
				loss-priority low code-point 010;
			}
			forwarding-class L1 {
				loss-priority low code-point 011;
			}
			forwarding-class H2 {
				loss-priority low code-point 100;
			}
			forwarding-class EF {
				loss-priority low code-point 101;
			}
			forwarding-class NC {
				loss-priority low code-point 110;
			}
		}
		inet-precedence RW-IPP {
			forwarding-class BE {
				loss-priority low code-point 000;
			}
			forwarding-class L2 {
				loss-priority low code-point 001;
			}
			forwarding-class AF {
				loss-priority low code-point 010;
			}
			forwarding-class L1 {
				loss-priority low code-point 011;
			}
			forwarding-class H2 {
				loss-priority low code-point 100;
			}
			forwarding-class EF {
				loss-priority low code-point 101;
			}
			forwarding-class NC {
				loss-priority low code-point 110;
			}
		}
	}
	scheduler-maps {
		queue-table {
			forwarding-class NC scheduler s-NC;
			forwarding-class EF scheduler s-EF;
			forwarding-class H2 scheduler s-H2;
			forwarding-class L1 scheduler s-L1;
			forwarding-class AF scheduler s-AF;
			forwarding-class L2 scheduler s-L2;
			forwarding-class BE scheduler s-BE;
		}
	}
	schedulers {
		s-NC {
			transmit-rate percent 1;
			buffer-size percent 1;
			priority high;
		}
		s-EF {
			transmit-rate percent 15;
			buffer-size percent 15;
			priority strict-high;
		}
		s-H2 {
			transmit-rate percent 30;
			buffer-size percent 30;
			priority medium-high;
		}
		s-L1 {
			transmit-rate percent 15;
			buffer-size percent 15;
			priority medium-high;
		}
		s-AF {
			transmit-rate percent 10;
			buffer-size percent 10;
			priority medium-high;
		}
		s-L2 {
			transmit-rate percent 14;
			buffer-size percent 14;
			priority medium-low;
		}
		s-BE {
			transmit-rate percent 15;
			buffer-size percent 15;
			priority low;
		}
	}
}
firewall {
    family inet {
		{%- for temp_policy in dict_policy_map_used %}
		{%- if dict_policy_map_used[temp_policy].family_type=='inet' %}		
		filter FF-INET-{{dict_policy_map_used[temp_policy].name}} {
			{%- if dict_policy_map_used[temp_policy].mf_list|length >0 %}
			{%- for tmp_term in dict_policy_map_used[temp_policy].mf_list %}
			term {{tmp_term.classname}} {
                from {
                    dscp [ {{tmp_term.dscp}} ];
                }
                then {
                    loss-priority low;
                    forwarding-class {{tmp_term.fc}};
                    accept;
                }
            }
			{%- endfor %}
			{%- if dict_policy_map_used[temp_policy].df_fc!='' %}
			term FINAL {
                then {
                    loss-priority low;
                    forwarding-class {{dict_policy_map_used[temp_policy].df_fc}};
                    accept;
                }
            }
			{%- else %}
            term FINAL {
                then {
                    loss-priority low;
                    forwarding-class BE;
                    accept;
                }
            }
			{%- endif %}
			{%- endif %}
			{%- if dict_policy_map_used[temp_policy].acl_list|length >0 %}
			{%- for tmp_term_acl in dict_policy_map_used[temp_policy].acl_list %}
			term {{tmp_term_acl.Index_1}} {
			{%- if (tmp_term_acl.Protocol_1 != '') and ((tmp_term_acl.Prefix_Source!= '') or (tmp_term_acl.Prefix_Dest != '') or (tmp_term_acl.S_Port != '') or (tmp_term_acl.D_Port != '')) %}
                from {
					{%- if tmp_term_acl.Prefix_Source != '' %}
					source-address {
                        {{tmp_term_acl.Prefix_Source}};
                    }
					{%- endif %}
                    {%- if tmp_term_acl.Prefix_Dest != '' %}
					destination-address {
                        {{tmp_term_acl.Prefix_Dest}};
                    }
					{%- endif %}
					{%- if (tmp_term_acl.Protocol_1 != '') and (tmp_term_acl.Protocol_1 != 'ip') %}
					protocol {{tmp_term_acl.Protocol_1}};
					{%- endif %}
					{%- if (tmp_term_acl.S_Port != '') %}
					source-port {{tmp_term_acl.S_Port}};
					{%- endif %}
					{%- if (tmp_term_acl.D_Port != '') %}
					destination-port {{tmp_term_acl.D_Port}};
					{%- endif %}
                    
                }
				{%- endif %}
                then {
                    {%- if tmp_term_acl.Action_1=='deny' %}
					discard;
					{%- else %}
					accept;
					{%-endif %}
                }
            }
			{%- endfor %}
			{%- endif %}
        }
		{%- endif %}
		{%- endfor %}
        filter RPF-ALLOW-DHCP {
            term ALLOW-DHCP-DISCOVER-REQUEST {
                from {
                    source-address {
                        0.0.0.0/32;
                    }
                    destination-address {
                        255.255.255.255/32;
                    }
                    protocol udp;
                    source-port 68;
                    destination-port 67;
                }
                then accept;
            }
            term DISCARD-ALL {          
                then {
                    discard;
                }
            }
        }
        filter PROTECT-RE-FILTER {
            term DISCARD-SMALL-PACKETS {
                from {
                    packet-length 0-24;
                }
                then {
                    count DISCARD-SMALL-PACKETS;
                    discard;
                }
            }
            term DISCARD-FIRST-FRAG {
                from {
                    first-fragment;
                }
                then {
                    count DISCARD-FIRST-FRAG;
                    inactive: syslog;
                    discard;
                }
            }
            term DISCARD-NEXT-FRAG {
                from {
                    is-fragment;
                }
                then {
                    count DISCARD-NEXT-FRAG;
                    inactive: syslog;
                    discard;
                }
            }
            term ACCEPT-BFD {
                from {
                    source-prefix-list {
                        INTERFACE-PREFIXES;
                        INTERNAL-LO0-PREFIXES;
                    }
                    protocol udp;
                    destination-port [ 3784-3785 4784 ];
                }
                then {
                    count ACCEPT-BFD;
                    accept;
                }
            }
            term ACCEPT-LDP-DISCOVER {
                from {
                    source-prefix-list {
                        INTERFACE-PREFIXES;
                        INTERNAL-LO0-PREFIXES;
                    }
                    protocol udp;
                    port ldp;
                }
                then {
                    count ACCEPT-LDP-DISCOVER;
                    accept;
                }
            }
            term ACCEPT-LDP-UNICAST {
                from {
                    source-prefix-list {
                        INTERFACE-PREFIXES;
                        INTERNAL-LO0-PREFIXES;
                    }
                    protocol tcp;
                    port ldp;
                }
                then {
                    count ACCEPT-LDP-UNICAST;
                    accept;
                }
            }
            term ACCEPT-RSVP {
                from {
                    source-prefix-list {
                        INTERFACE-PREFIXES;
                        INTERNAL-LO0-PREFIXES;
                    }
                    protocol rsvp;
                }
                then {
                    count ACCEPT-RSVP;
                    accept;
                }
            }
			term ACCEPT-LSP-SELFPING {
				from {
					source-prefix-list {
						INTERFACE-PREFIXES;
						INTERNAL-LO0-PREFIXES;
					}
					protocol udp;
					port 8503;
				}
				then {
					count accept-selfping;
					accept;
				}
			}
            term ACCEPT-BGP {
                from {
                    source-prefix-list {
                        BGP-NEIGHBORS;
                        BGP-NEIGHBORS-RI;
                    }
                    protocol tcp;
                    port bgp;
                }
                then {
                    count ACCEPT-BGP;
                    accept;
                }
            }
            term ACCEPT-PIM {
                from {
                    source-prefix-list {
                        INTERFACE-PREFIXES;
                    }
                    protocol pim;
                }
                then {
                    policer POLICER-PIM;
                    count ACCEPT-PIM;
                    accept;
                }
            }
            term DISCARD-IGMP-QUERY {
                from {
                    destination-address {
                        224.0.0.1/32;
                    }
                    protocol igmp;
                }
                then {
                    count DISCARD-IGMP-QUERY;
                    discard;
                }
            }
            term ACCEPT-IGMP-REPORT {
                from {
                    protocol igmp;
                }
                then {
                    policer POLICER-IGMP-REPORT;
                    count ACCEPT-IGMP-REPORT;
                    accept;
                }
            }
            term ACCEPT-DHCP {
                from {
                    protocol udp;
                    port [ 67 68 ];
                }
                then {
                    count ACCEPT-DHCP;
                    accept;
                }
            }
            term ACCEPT-OSPF {
                from {
                    source-prefix-list {
                        INTERFACE-PREFIXES;
                    }
                    protocol ospf;
                }
                then {
                    count ACCEPT-OSPF;
                    accept;
                }
            }
            term ACCEPT-RIP {
                from {
                    destination-address {
                        224.0.0.9/32;
                    }
                    source-prefix-list {
                        INTERFACE-PREFIXES;
                    }
                    protocol udp;
                    source-port rip;
                    destination-port rip;
                }
                then {
                    count ACCEPT-RIP;
                    accept;
                }
            }
            term ACCEPT-VRRP {
                from {
                    destination-address {
                        224.0.0.18/32;
                    }
                    source-prefix-list {
                        INTERFACE-PREFIXES;
                    }
                    protocol vrrp;
                }
                then {
                    policer POLICER-VRRP;
                    count ACCEPT-VRRP;
                    accept;
                }
            }
            term ACCEPT-TELNET-SSH {
                from {
                    source-prefix-list {
                        MGMT-PREFIXES;
                        INTERNAL-NNI-PREFIXES;
                        INTERNAL-LO0-PREFIXES;
                    }
                    protocol tcp;
                    port [ ssh telnet ];
                }
                then {
                    policer POLICER-TELNET-SSH;
                    count ACCEPT-TELNET-SSH;
                    accept;
                }
            }
			/* Allow telnet/ssh out from router to L2 access devices*/
			term ACCEPT-TELNET-SSH-OUT {
				from {
					source-prefix-list {
						L2ACCESS-PREFIXES;
					}
					protocol tcp;
					source-port [ ssh telnet ];
				}
				then {
					policer POLICER-TELNET-SSH;
					count ACCEPT-TELNET-SSH-OUT;
					accept;
				}
			}			
            term ACCEPT-NETCONF {
                from {
                    source-prefix-list {
                        MGMT-PREFIXES;
                    }
                    protocol tcp;
                    destination-port 830;
                }
                then {
                    count ACCEPT-NETCONF;
                    accept;
                }
            }
            term ACCEPT-FTP {
                from {
                    source-prefix-list {
                        MGMT-PREFIXES;
                    }
                    protocol tcp;
                    port [ ftp ftp-data ];
                }
                then {
                    policer POLICER-FTP;
                    count ACCEPT-FTP;
                    accept;
                }
            }
            term ACCEPT-SNMP {
                from {
                    source-prefix-list {
                        SNMP-CLIENT-PREFIXES;
                    }
                    protocol udp;
                    destination-port snmp;
                }
                then {
                    count ACCEPT-SNMP;
                    accept;
                }
            }
            term ACCEPT-NTP {
                from {
                    source-prefix-list {
                        NTP-SERVER;
                        NTP-SOURCE-ADDRESS;
                    }
                    protocol udp;
                    port ntp;
                }
                then {
                    count ACCEPT-NTP;
                    accept;
                }
            }
            /* Use only on NTP Server: P-HBT1 and P-TBI1 */
            inactive: term ACCEPT-NTP-SERVER {
                from {
                    prefix-list {
                        INTERNAL-LO0-PREFIXES;
                    }
                    protocol udp;
                    destination-port ntp;
                }
                then {
                    count ACCEPT-NTP-SERVER;
                    accept;
                }
            }
            term DISCARD-NTP {
                from {
                    protocol udp;
                    port ntp;
                }
                then {
                    count DISCARD-NTP;
                    inactive: syslog;
                    discard;
                }
            }
            term ACCEPT-TACACS {
                from {
                    source-prefix-list {
                        TACACS-SERVERS;
                    }
                    protocol [ tcp udp ];
                    source-port [ tacacs tacacs-ds ];
                }
                then {
                    count ACCEPT-TACACS;
                    accept;
                }
            }
            term ACCEPT-ICMP-INTERNAL {
                from {
                    source-prefix-list {
                        MGMT-PREFIXES;
                        INTERNAL-NNI-PREFIXES;
                        INTERNAL-LO0-PREFIXES;
                    }
                    protocol icmp;
                    icmp-type [ echo-request echo-reply time-exceeded unreachable ];
                }
                then {
                    policer POLICER-ICMP-INTERNAL;
                    count ACCEPT-ICMP-INTERNAL;
                    accept;
                }
            }
            term ACCEPT-ICMP-EXTERNAL {
                from {
                    protocol icmp;
                    icmp-type [ echo-request echo-reply time-exceeded unreachable ];
                }
                then {
                    policer POLICER-ICMP-EXTERNAL;
                    count ACCEPT-ICMP-EXTERNAL;
                    accept;
                }
            }
            term ACCEPT-LSP-PING {
                from {
                    source-prefix-list {
                        INTERNAL-NNI-PREFIXES;
                        INTERNAL-LO0-PREFIXES;
                    }
                    protocol udp;
                    port 3503;
                }
                then {
                    count ACCEPT-LSP-PING;
                    accept;
                }
            }
            term ACCEPT-TRACEROUTE-UDP {
                from {
                    protocol udp;
                    ttl 1;
                    destination-port 33434-33523;
                }
                then {
                    policer POLICER-TRACEROUTE-UDP;
                    count ACCEPT-TRACEROUTE-UDP;
                    accept;
                }
            }
            term ACCEPT-GRE {
                from {
                    protocol gre;
                }
                then {
                    policer POLICER-GRE;
                    count ACCEPT-GRE;
                    accept;
                }
            }
            term DISCARD-ALL {
                then {
                    count DISCARD-ALL;
                    inactive: syslog;
                    discard;
                }
            }
        }
    }
    family vpls {
		{%- for temp_policy_vpls in dict_policy_map_used %}
		{%- if dict_policy_map_used[temp_policy_vpls].family_type=='vpls' %}
		filter FF-VPLS-{{dict_policy_map_used[temp_policy_vpls].name}} {
			{%- if dict_policy_map_used[temp_policy_vpls].mf_list|length >0 %}
			{%- for tmp_term in dict_policy_map_used[temp_policy_vpls].mf_list %}
			term {{tmp_term.classname}} {
                from {
                    dscp [ {%- if tmp_term.dscp=='default' %} be {%- else %} {{tmp_term.dscp}} {%- endif %} ];
                }
                then {
                    loss-priority low;
                    forwarding-class {{tmp_term.fc}};
                    accept;
                }
            }
			{%- endfor %}
			{%- if dict_policy_map_used[temp_policy_vpls].df_fc!='' %}
			term FINAL {
                then {
                    loss-priority low;
                    forwarding-class {{dict_policy_map_used[temp_policy_vpls].df_fc}};
                    accept;
                }
            }
			{%- else %}
            term FINAL {
                then {
                    loss-priority low;
                    forwarding-class BE;
                    accept;
                }
            }
			{%- endif %}
			{%- endif %}
			{%- if dict_policy_map_used[temp_policy_vpls].acl_list|length >0 %}
			{%- for tmp_term_acl in dict_policy_map_used[temp_policy_vpls].acl_list %}
			 term {{tmp_term_acl.Index_1}} {
				{%- if (tmp_term_acl.Protocol_1 != '') and ((tmp_term_acl.Prefix_Source!= '') or (tmp_term_acl.Prefix_Dest != '')) %}
				from {
					{%- if (tmp_term_acl.Prefix_Source != '') and (':' in tmp_term_acl.Prefix_Source) %}
					source-mac-address {
                        {{tmp_term_acl.Prefix_Source}};
                    }
					{%- elif (tmp_term_acl.Prefix_Source != '') and ('.' in tmp_term_acl.Prefix_Source) %}
					ip-source-address {
						{{tmp_term_acl.Prefix_Source}};
					}
					{%- endif %}
                    {%- if (tmp_term_acl.Prefix_Dest != '') and (':' in tmp_term_acl.Prefix_Dest) %}
					destination-mac-address {
                        {{tmp_term_acl.Prefix_Dest}};
                    }
					{%-elif (tmp_term_acl.Prefix_Dest != '') and ('.' in tmp_term_acl.Prefix_Dest) %}
					ip-destination-address {
						{{tmp_term_acl.Prefix_Dest}};
					}
					{%- endif %}   
					{%- if (tmp_term_acl.Protocol_1 != '') and (tmp_term_acl.Protocol_1 != 'ip') %}
					ip-protocol {{tmp_term_acl.Protocol_1}};
					{%- endif %}
                }
				{%- endif %}
                then {
                    {%- if tmp_term_acl.Action_1=='deny' %}
					discard;
					{%- else %}
					accept;
					{%-endif %}
                }
            }
			{%- endfor %}
			{%- endif %}
        }
		{%- endif %}
		{%- endfor %}
        {%- for l2vpn in l2vpn_list  %}
            filter BUM-{{l2vpn.name}} {
                term broadcast-traffic {
                    from {
                        traffic-type broadcast;
                    }
                    then {
                        policer POLICER-BCAST;
                        accept;
                    }
                }
                term multicast-traffic {
                    from {
                        traffic-type multicast;
                    }
                    then {
                        policer POLICER-MCAST;
                        accept;
                    }
                }
                term unknown-unicast-traffic {
                    from {
                        traffic-type unknown-unicast;
                    }
                    then {
                        policer POLICER-BCAST;
                        accept;
                    }
                }
            }
        {%- endfor %}
         {%- for l2vpn_local in l2vpn_list_local  %}
            {%- if l2vpn_local.flag_pim == false %}
            filter BUM-{{l2vpn_local.name}} {
                term broadcast-traffic {
                    from {
                        traffic-type broadcast;
                    }
                    then {
                        policer POLICER-BCAST;
                        accept;
                    }
                }
                term multicast-traffic {
                    from {
                        traffic-type multicast;
                    }
                    then {
                        policer POLICER-MCAST;
                        accept;
                    }
                }
                term unknown-unicast-traffic {
                    from {
                        traffic-type unknown-unicast;
                    }
                    then {
                        policer POLICER-BCAST;
                        accept;
                    }
                }
            }
            {%- endif %}
        {%- endfor %}
    }
    policer POLICER-PIM {
        if-exceeding {
            bandwidth-limit 1m;
            burst-size-limit 128k;
        }
        then discard;
    }
    policer POLICER-IGMP-REPORT {
        if-exceeding {
            bandwidth-limit 1m;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer POLICER-VRRP {
        if-exceeding {
            bandwidth-limit 1m;
            burst-size-limit 128k;
        }
        then discard;
    }
    policer POLICER-TELNET-SSH {
        if-exceeding {
            bandwidth-limit 2m;
            burst-size-limit 75k;
        }
        then discard;
    }
    policer POLICER-FTP {
        if-exceeding {
            bandwidth-limit 10m;
            burst-size-limit 320k;
        }
        then discard;
    }
    policer POLICER-ICMP-INTERNAL {
        if-exceeding {
            bandwidth-limit 3m;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer POLICER-ICMP-EXTERNAL {
        if-exceeding {
            bandwidth-limit 2m;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer POLICER-TRACEROUTE-UDP {
        if-exceeding {
            bandwidth-limit 1m;
            burst-size-limit 125k;
        }
        then discard;
    }
    policer POLICER-GRE {
        if-exceeding {
            bandwidth-limit 256k;
            burst-size-limit 15k;
        }
        then discard;
    }
    policer POLICER-MCAST{
        if-exceeding {
            bandwidth-limit 512k;
            burst-size-limit 512k;
        }
        then discard;
    }
    policer POLICER-BCAST{
        if-exceeding {
            bandwidth-limit 512k;
            burst-size-limit 512k;
        }
        then discard;
    }
    {%- for policer_temp in list_policer %}
    {%- if policer_temp.bandwidth > 0 %}
    policer POLICER-{{policer_temp.name}} {
        if-exceeding {
            bandwidth-limit {{policer_temp.bandwidth}}k;
            burst-size-limit {{policer_temp.burst_size}}k;
        }
        then discard;
    }
    {%- endif %} 
    {% endfor %}
}

routing-instances {
	{%- for service_name in service_list %}
    L3-{{service_name.name_out}} {
        instance-type vrf;
        {%- if service_name.description != '' %}
        description "{{service_name.description}}";
        {%- endif %}
        {%- for inter_name in service_name.interface_unit %}
        interface {{inter_name.name}};
        {%- endfor %}
        route-distinguisher {{service_name.rd}};
        vrf-import PS-IMP-{{service_name.name_out}};
        vrf-export PS-EXP-{{service_name.name_out}};
        vrf-table-label;
        routing-options {
            auto-export;
            {%- if service_name.list_static_route|length > 0 %}
            	static {
                    {%- for static_route in service_name.list_static_route %}
                    route {{static_route.net}} {
                        {%- for nh_ad in static_route.list_nh_ad %}
                        {%- if nh_ad.nh==''%}
							discard;
						{%- else %}
							{%- if(nh_ad.ad != 0) %}
							qualified-next-hop {{nh_ad.nh}} {
								preference {{nh_ad.ad}};
								{%- if nh_ad.multiplier > 0%}
								bfd-liveness-detection {
									minimum-interval {{nh_ad.min_tx}};
									multiplier {{nh_ad.multiplier}};
								}
								{%- endif%}
							}
							{%- else %}
								{%- if nh_ad.multiplier > 0%}
								qualified-next-hop {{nh_ad.nh}} {
									bfd-liveness-detection {
										minimum-interval {{nh_ad.min_tx}};
										multiplier {{nh_ad.multiplier}};
									}
								}
								{%- else %}
								qualified-next-hop {{nh_ad.nh}};
								{%- endif %}
							{%- endif %}
                        {%- endif %}
						{%- endfor %}
                    }
                    {%- endfor %}
                }
            {%- endif %}            
        }
        {%- if service_name.bgp == true %}
        protocols {
            bgp {
                {%- for bgp_group in service_name.list_bgp %}
                group {{bgp_group.name_group}} {
                    {%- for neighbor_peer_as in bgp_group.list_neighbor_peer_as %}  
                    neighbor {{neighbor_peer_as.peer}} {
                        {%- if neighbor_peer_as.local_address_name != '' %}
                        local-address {{neighbor_peer_as.local_address_name}};
                        {%- endif %}
						{%- if neighbor_peer_as.export_policy!=''%}
						export PS-{{neighbor_peer_as.export_policy}};
						{%- endif %}
						{%- if neighbor_peer_as.import_policy!=''%}
						import PS-{{neighbor_peer_as.import_policy}};
						{%- endif %}
                        peer-as {{neighbor_peer_as.remote_as}};
                        {%- if neighbor_peer_as.bfd_interval >0 %}
						bfd-liveness-detection {
                            minimum-interval {{neighbor_peer_as.bfd_interval}};
                            multiplier {{neighbor_peer_as.bfd_multiplier}};
                            no-adaptation;
                        }
						{%- endif %}
                    }
                    {%- endfor %}
                }
                {%- endfor %}
            }
        }
        {%- endif %}
        {%- if service_name.dhcp_relay == true %}
		forwarding-options {
            dhcp-relay {
				relay-option-82 {
                    circuit-id {
                        prefix {
                            host-name;
                        }
                    }
                }
				overrides {
					trust-option-82;
				}
				
            	{%- for group_temp in service_name.vrf_with_ip_helper.list_server_intf_group %}
                server-group  {
                    server-{{group_temp.name}} {
                    	{%- for helper_temp in group_temp.list_helper %}
                        {{helper_temp}};
                    	{%- endfor %}
                    }
                }
                group {{group_temp.name_intf}} {
                    active-server-group server-{{group_temp.name}};
                	{%- for temp_intf in group_temp.list_interface %}
                    interface {{temp_intf}};
                    {%- endfor %}
                }
                {%- endfor %}
            }
        }
	    {%- endif %}
        
    } 
    {%- endfor %}
    {%- for l2vpn in l2vpn_list %}
        L2-{{l2vpn.name}} {
            instance-type vpls;
            {%- if l2vpn.description != '' %}
            description "{{l2vpn.description}}";
            {%- endif %}
            {%- for interface_unit in l2vpn.interface_unit %}
            {%- if interface_unit.mx_ifd != '' %}
            {%- if interface_unit.mx_ifd != 'irb' %}
                interface {{interface_unit.name}};
            {%- else %}
                {%- if interface_unit.stitching == true %}
                routing-interface {{interface_unit.name}};
                vlan-id none;
                {%- endif %}
            {%- endif %}
            {%- endif %}
            {%- endfor %}
            forwarding-options {
                family vpls {
                    flood {
                        input BUM-{{l2vpn.name}};
                    }
                }
            }
            protocols {
                {% if l2vpn.admin_status == false %} inactive:{% endif %} vpls {
                    bum-hashing;
                    {%- if l2vpn.encap == 'ethernet' %}
                    encapsulation-type ethernet;
                    {%- else %}
                    encapsulation-type ethernet-vlan;
                    {%- endif %}
                    no-tunnel-services;
					no-vlan-id-validate;
                    {%- if l2vpn.mtu >1500 %}
                    mtu {{l2vpn.mtu}};
                    {%- endif %}
                    {%- if l2vpn.vsi > 0 %}
                    vpls-id {{l2vpn.vsi}};
                    {%- endif %}
                    {%- if l2vpn.listPeer_global | length > 0%}
                        {%- if l2vpn.flag_global == true %}
                        {%- for tmp_peer_gl in l2vpn.listPeer_global %}
                        /* {{tmp_peer_gl.peer}} {{tmp_peer_gl.vc_id}} */
                        {%- endfor %}
                        {%- endif %}
                        {%- for tmp_peer_gl_1 in l2vpn.listPeer_global %}
                        neighbor {{tmp_peer_gl_1.peer}};
                        {%- endfor %}
                    {%- endif %}
                    {%- if (l2vpn.listPeer_split|length > 0) %}
                        mesh-group SPLIT {
                            {%- for peer_split in l2vpn.listPeer_split %}
                                neighbor {{peer_split.peer}} {
								{%- if l2vpn.list_recheck_split | length > 0 %}
									{% if l2vpn.vsi!= peer_split.vc_id %}vpls-id-list {{peer_split.vc_id}} ; {% endif %}
								{%- endif %}
                                    pseudowire-status-tlv;
                                    {%- if peer_split.bk_peer != '' %}
                                    switchover-delay 0;
                                    revert-time 10;
                                    backup-neighbor {{peer_split.bk_peer}} {
                                        standby;
                                    }
                                    {%- endif %}
                                } 
                            {%- endfor %}
                        }
                    {%- endif %}
                    {%- if (l2vpn.listPeer_no_split|length > 0) %}
                        mesh-group NO-SPLIT {
                            local-switching;
                            {%- for peer_nosplit in l2vpn.listPeer_no_split %}
                                neighbor {{peer_nosplit.peer}} {
								{%- if l2vpn.list_recheck_no_split | length > 0 %}
									{% if l2vpn.vsi!= peer_nosplit.vc_id %} vpls-id-list {{peer_nosplit.vc_id}} ;{% endif %}
								{%- endif %}
                                    pseudowire-status-tlv;
                                    {%- if peer_nosplit.bk_peer != '' %}
                                    switchover-delay 0;
                                    revert-time 10;
                                    backup-neighbor {{peer_nosplit.bk_peer}} {
                                        standby;
                                    }
                                    {%- endif %}
                                }
                            {%- endfor %}
                        }   
                    {%- endif %}
                }
            }
        }
    {%- endfor %}
    {%- for l2vpn_local in l2vpn_list_local %}
        L2-{{l2vpn_local.name}} {
            instance-type vpls;
            {%- for interface_unit in l2vpn_local.interface_unit %}
                {%- if interface_unit.mx_ifd != '' %}
                {%- if 'irb' not in interface_unit.name %}
                interface {{interface_unit.name}};
                {%- else %}      
                routing-interface {{interface_unit.name}};
                vlan-id none;
                {%- endif %}
                {%- endif %}
            {%- endfor %}
            {%- if l2vpn_local.flag_pim == false %}
            forwarding-options {
                family vpls {
                    flood {
                        input BUM-{{l2vpn_local.name}};
                    }
                }
            }
            {%- else %}
            protocols {
                igmp-snooping;
            }
            {%- endif%}
        }
    {%- endfor %}
}
